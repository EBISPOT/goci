-- COUNTRY
CREATE SEQUENCE COUNTRY_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER COUNTRY_TRG BEFORE INSERT ON COUNTRY FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT COUNTRY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER COUNTRY_TRG ENABLE;

-- GENE
CREATE SEQUENCE GENE_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER GENE_TRG BEFORE INSERT ON GENE FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT GENE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER GENE_TRG ENABLE;

-- REGION
CREATE SEQUENCE REGION_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER REGION_TRG BEFORE INSERT ON REGION FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT REGION_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER REGION_TRG ENABLE;

-- SNP
CREATE SEQUENCE SNP_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER SNP_TRG BEFORE INSERT ON SINGLE_NUCLEOTIDE_POLYMORPHISM FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT SNP_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER SNP_TRG ENABLE;

-- EFOTRAIT
CREATE SEQUENCE EFO_TRAIT_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER EFO_TRAIT_TRG BEFORE INSERT ON EFO_TRAIT FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT EFO_TRAIT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER EFO_TRAIT_TRG ENABLE;

-- CURATOR
CREATE SEQUENCE CURATOR_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER CURATOR_TRG BEFORE INSERT ON CURATOR FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT CURATOR_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER CURATOR_TRG ENABLE;

-- CURATION_STATUS
CREATE SEQUENCE CURATION_STATUS_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER CURATION_STATUS_TRG BEFORE INSERT ON CURATION_STATUS FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT CURATION_STATUS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER CURATION_STATUS_TRG ENABLE;

-- DISEASE_TRAIT
CREATE SEQUENCE DISEASE_TRAIT_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER DISEASE_TRAIT_TRG BEFORE INSERT ON DISEASE_TRAIT FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT DISEASE_TRAIT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER DISEASE_TRAIT_TRG ENABLE;

-- HOUSEKEEPING
CREATE SEQUENCE HOUSEKEEPING_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER HOUSEKEEPING_TRG BEFORE INSERT ON HOUSEKEEPING FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT HOUSEKEEPING_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER HOUSEKEEPING_TRG ENABLE;

-- STUDY
CREATE SEQUENCE STUDY_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER STUDY_TRG BEFORE INSERT ON STUDY FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT STUDY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER STUDY_TRG ENABLE;

-- ETHNICITY
CREATE SEQUENCE ETHNICITY_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ETHNICITY_TRG BEFORE INSERT ON ETHNICITY FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT ETHNICITY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER ETHNICITY_TRG ENABLE;

-- ASSOCIATION
CREATE SEQUENCE ASSOCIATION_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER ASSOCIATION_TRG BEFORE INSERT ON ASSOCIATION FOR EACH ROW BEGIN IF :NEW.ID IS NULL THEN SELECT ASSOCIATION_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL; END IF; END; ;
ALTER TRIGGER ASSOCIATION_TRG ENABLE;
